{
  "scopeName": "source.elvish",
  "name": "Elvish",
  "fileTypes": [
    "elv"
  ],
  "patterns": [
    {
      "include": "#lineComment"
    },
    {
      "include": "#singleQuoteString"
    },
    {
      "include": "#doubleQuoteString"
    },
    {
      "include": "#source"
    },
    {
      "include": "#use"
    },
    {
      "include": "#builtinFunctions"
    },
    {
      "include": "#builtinExtras"
    },
    {
      "include": "#builtinFlowControl"
    },
    {
      "include": "#builtinVariables"
    },
    {
      "include": "#functionDefinition"
    },
    {
      "include": "#mathFunctions"
    },
    {
      "include": "#path"
    },
    {
      "include": "#map"
    },
    {
      "include": "#elvishVariable"
    },
    {
      "include": "#elvishNumber"
    },
    {
      "include": "#assignation"
    },
    {
      "include": "#namespace"
    },
    {
      "include": "#flag"
    },
    {
      "include": "#other"
    },
    {
      "match": "(\\[)([\\w|\\s|~]+)(\\])",
      "captures": {
        "1": {
          "name": "comment"
        },
        "2": {
          "name": "token.info-token"
        },
        "3": {
          "name": "comment"
        }
      }
    },
    {
      "name": "keyword",
      "match": "(=|\\.|\\||>|<|(&(-|\\d)))"
    },
    {
      "name": "token.info-token",
      "match": "(\\(|\\))"
    },
    {
      "name": "constant.numeric",
      "match": "(\\{|\\})"
    },
    {
      "name": "markup.changed",
      "match": "(\\d)"
    },
    {
      "name": "keyword",
      "match": "@"
    }
  ],
  "repository": {
    "map": {
      "comment": "Elvish Map Keyword Highlighting",
      "match": "(&)(\\S*)(=)(w*)",
      "captures": {
        "1": {
          "name": "constant.other.elvish"
        },
        "2": {
          "name": "entity.name.function.elvish"
        },
        "3": {
          "name": "keyword.operator.elvish"
        }
      }
    },
    "builtinVariables": {
      "name": "constant.language.elvish",
      "match": "(\\$_|\\$args|\\$false|\\$ok|\\$value-out-indicator|\\$paths|\\$pid|\\$pwd|\\$true)"
    },
    "builtinFunctions": {
      "comment": "Elvish Builtin Functions - Compound expressions *must* be placed first!",
      "match": "\\b(not-eq|all|assoc|bool|cd|constantly|count|dissoc|drop|each|eawk|echo|eq|exec|exit|explode|external|fail|fclose|fopen|from-json|has-external|has-prefix|has-suffix|is|joins|keys|kind-of|nop|not|ord|path-abs|path-base|path-clean|path-dir|path-ext|peach|pipe|prclose|put|pprint|print|pwclose|range|rand|randint|repeat|replaces|repr|resolve|run-parallel|search-external|slurp|splits|src|take|tilde-abbr|to-json|to-string|wcswidth) ",
      "captures": {
        "1": {
          "name": "support.function.elvish"
        }
      }
    },
    "builtinExtras": {
      "comment": "Elvish commands not included in builtins",
      "name": "support.function.elvish",
      "match": "\\b(del|use)\\b"
    },
    "builtinFlowControl": {
      "match": "\\b((if|elif|else|while|for|try|except|finally|nop|return))\\b\\s+",
      "captures": {
        "1": {
          "name": "keyword.control.elvish"
        }
      }
    },
    "mathFunctions": {
      "comment": "Elvish math & boolean operators",
      "match": "(\\s|\\()((\\+ |\\- |\\* |\\/ |\\% |\\^|\\<\\=?s?|\\>\\=?s?|\\=\\=s?|\\!\\=s?))",
      "captures": {
        "1": {
          "name": "token.info-token"
        },
        "2": {
          "name": "keyword.operator.elvish"
        }
      }
    },
    "assignation": {
      "comment": "Assignation declaration",
      "match": "(\\w+)\\s?(=)\\s?",
      "captures": {
        "1": {
          "name": "token.info-token"
        },
        "2": {
          "name": "keyword"
        }
      }
    },
    "namespace": {
      "comment": "Namespace",
      "match": "(\\w+)(:)",
      "captures": {
        "1": {
          "name": "token.info-token"
        },
        "2": {
          "name": "keyword"
        }
      }
    },
    "lineComment": {
      "name": "comment.line.number-sign.elvish",
      "match": "#.*$"
    },
    "source": {
      "name": "keyword",
      "match": "^(-source)\\s+"
    },
    "singleQuoteString": {
      "name": "string.quoted.single.elvish",
      "begin": "'",
      "end": "'"
    },
    "doubleQuoteString": {
      "name": "string.quoted.double.elvish",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "invalid.illegal.elvish",
          "match": "\\\\\\*"
        },
        {
          "name": "constant.character.escape.elvish",
          "match": "\\\\\\w"
        }
      ]
    },
    "functionDefinition": {
      "comment": "Elvish function declaration",
      "begin": "(fn) (\\S*)",
      "beginCaptures": {
        "1": {
          "name": "markup.quote"
        },
        "2": {
          "name": "entity.name.function.elvish"
        }
      },
      "end": "(\\{)",
      "endCaptures": {
        "1": {
          "name": "constant.numeric"
        }
      },
      "patterns": [
        {
          "begin": "(\\[)",
          "beginCaptures": {
            "1": {
              "name": "comment"
            }
          },
          "end": "(\\])",
          "endCaptures": {
            "1": {
              "name": "comment"
            }
          },
          "patterns": [
            {
              "include": "#map"
            },
            {
              "include": "#builtinVariables"
            },
            {
              "match": "&",
              "name": "variable.parameter.elvish"
            },
            {
              "match": "(@?[\\w-]*) ?",
              "captures": {
                "1": {
                  "name": "token.info-token"
                }
              }
            }
          ]
        }
      ]
    },
    "elvishVariable": {
      "match": "(\\$)(@?)((\\w|-|~|:)+)",
      "captures": {
        "1": {
          "name": "keyword"
        },
        "2": {
          "name": "variable.parameter"
        },
        "3": {
          "name": "constant.numeric"
        }
      }
    },
    "use": {
      "match": "^(use)\\s+(.*)$",
      "captures": {
        "1": {
          "name": "keyword"
        },
        "2": {
          "name": "comment"
        }
      }
    },
    "flag": {
      "match": "(--?)([a-zA-Z_-]+)",
      "captures": {
        "1": {
          "name": "storage"
        },
        "2": {
          "name": "comment"
        }
      }
    },
    "path": {
      "match": "(/)((\\w|\\.|-)+)",
      "captures": {
        "1": {
          "name": "entity.name.function.elvish"
        },
        "2": {
          "name": "comment"
        }
      }
    },
    "other": {
      "match": "(\\w[a-zA-Z0-9_-]*)",
      "captures": {
        "1": {
          "name": "variable.parameter"
        }
      }
    }
  }
}